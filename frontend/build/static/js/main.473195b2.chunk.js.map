{"version":3,"sources":["components/Footer.js","constants/userConstants.js","action/userActions.js","components/Header.js","components/Rating.js","components/Product.js","constants/productConstants.js","components/Loader.js","components/Message.js","screens/HomeScreen.js","action/productAction.js","screens/ProductScreen.js","constants/CartConstants.js","action/CartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","App.js","reportWebVitals.js","store.js","reducers/productsReducers.js","reducers/CartReducers.js","reducers/userReducers.js","index.js"],"names":["Footer","Container","Row","Col","className","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","getUserDetails","id","dispatch","getState","a","type","userInfo","userLogin","config","headers","Authorization","token","axios","get","data","payload","response","message","Header","useDispatch","useSelector","state","Navbar","bg","variant","expand","collapseOnSelect","to","Brand","Toggle","Collapse","Nav","Link","NavDropdown","title","name","Item","onClick","localStorage","removeItem","isAdmin","Rating","value","text","color","style","Product","product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numbReviews","numReviews","price","defaultProps","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","Loader","Spinner","animation","role","width","height","margin","display","Message","children","Alert","HomeScreen","productList","loading","error","products","useEffect","map","sm","md","lg","xl","ProductScreen","history","match","useState","qty","setQty","productDetails","params","Image","alt","fluid","ListGroup","description","countInStock","Form","Control","onChange","e","target","Array","keys","x","Button","push","disabled","CART_ADD_ITEM","CART_REMOVE_ITEM","addToCart","setItem","JSON","stringify","cart","cartItems","CartScreen","location","productId","search","Number","split","removeFromCartHandler","removeFromCart","length","item","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","onSubmit","preventDefault","post","login","Group","controlId","Label","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","userRegister","register","ProfileScreen","userDetails","user","success","userUpdateProfile","put","updateUserProfile","UserListScreen","userList","users","sucessDelete","userDelete","deleteHandler","window","confirm","delete","deleteUser","Table","striped","bordered","hover","responsive","UserEditScreen","userId","setIsAdmin","userUpdate","loadingUpdate","errorUpdate","successUpdate","updateUser","Check","label","checked","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","reviews","existItem","find","filter","initialState","getItem","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.473195b2.chunk.js","sourcesContent":["import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nexport default function Footer() {\n    return (\n        <Container>\n            <Row>\n                <Col className='text-center py-3'>\n                    Copyright &copy; myShop\n                </Col>\n            </Row>\n        </Container>\n            \n    )\n}\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\n\n","import {\n    USER_DELETE_FAIL,\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_REQUEST,\n    USER_LIST_RESET,\n    USER_LIST_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGOUT,\n    USER_REGISTER_FAIL,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_UPDATE_FAIL,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS\n} from \"../constants/userConstants\"\nimport axios from 'axios'\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/login',\n            { email, password },\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data,\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n            dispatch({\n                type: USER_LOGIN_FAIL,\n                payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n                \n            })\n    }\n}\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({type: USER_LIST_RESET})\n}\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users',\n            { name, email, password },\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data,\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data,\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n            dispatch({\n                type: USER_REGISTER_FAIL,\n                payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n                \n            })\n    }\n}\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const { userLogin: {userInfo}} = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n\n        const { data } = await axios.get(\n            `/api/users/${id}`, config\n        )\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data,\n        })\n\n\n    } catch (error) {\n            dispatch({\n                type: USER_DETAILS_FAIL,\n                payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n                \n            })\n    }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                  Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n\n        const { data } = await axios.put(\n            `/api/users/profile`,\n            user,\n            config,\n\n        )\n\n       \n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data,\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data,\n        })\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n            dispatch({\n                type: USER_UPDATE_PROFILE_FAIL,\n                payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n                \n            })\n    }\n}\n\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST\n        })\n\n        const { userLogin: { userInfo }, } = getState()\n\n        const config = {\n            headers: {\n                  Authorization: `Bearer ${userInfo.token}`,\n            },\n        }\n\n        const { data } = await axios.get(\n            '/api/users', config,\n        )\n\n\n       \n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data,\n        })\n\n\n    } catch (error) {\n            dispatch({\n                type: USER_LIST_FAIL,\n                payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n                \n            })\n    }\n}\n\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST\n        })\n\n        const { userLogin: { userInfo }, } = getState()\n        const config = {\n            headers: {\n                  Authorization: `Bearer ${userInfo.token}`,\n            },\n        }\n\n        await axios.delete(\n            `/api/users/${id}`, config,\n        )\n\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n        })\n\n\n    } catch (error) {\n            dispatch({\n                type: USER_DELETE_FAIL,\n                payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n                \n            })\n    }\n}\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        })\n\n        const { userLogin: { userInfo }, } = getState()\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n                \n            },\n        }\n\n        const {data} = await axios.put(\n            `/api/users/${user._id}`, user, config,\n        )\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n        })\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n            dispatch({\n                type: USER_UPDATE_FAIL,\n                payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n                \n            })\n    }\n}","import React from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { logout } from '../action/userActions'\n\nexport default function Header() {\n\n    const dispatch = useDispatch()\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n    \n    const logoutHandler = () => {\n        dispatch(logout())\n    }\n\n\n    return (\n        <header>\n            <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\n                <Container>\n                    <LinkContainer to='/'>\n                        <Navbar.Brand>MyShop</Navbar.Brand>\n                    </LinkContainer>\n                    \n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"ms-auto\">\n                            \n                            <LinkContainer to='/cart'>\n                                 <Nav.Link> <i className='fas fa-shopping-cart'></i> Cart </Nav.Link>\n                            </LinkContainer>\n\n                            {userInfo ? (\n                                <NavDropdown title={userInfo.name} id='username'>\n                                    <LinkContainer to='/profile'>\n                                        <NavDropdown.Item>\n                                            Profile\n                                        </NavDropdown.Item>\n                                    </LinkContainer>\n                                        <NavDropdown.Item onClick={logoutHandler}>\n                                            Logout\n                                        </NavDropdown.Item>\n                                   \n                                </NavDropdown>\n                            ):\n                                 <LinkContainer to='/login'>\n                                    <Nav.Link><i className='fas fa-user'></i> Login</Nav.Link>\n                                 </LinkContainer>\n                            }\n\n                            {\n                                userInfo && userInfo.isAdmin && (\n                                    <NavDropdown title='Admin' id='aminmenu'>\n                                    <LinkContainer to='/admin/userlist'>\n                                        <NavDropdown.Item>\n                                            Users\n                                        </NavDropdown.Item>\n                                        </LinkContainer>\n                                        \n                                    <LinkContainer to='/admin/productlist'>\n                                        <NavDropdown.Item>\n                                            Products\n                                        </NavDropdown.Item>\n                                        </LinkContainer>\n                                        \n                                    <LinkContainer to='/admin/orderlist'>\n                                        <NavDropdown.Item>\n                                           Orders\n                                        </NavDropdown.Item>\n                                    </LinkContainer>\n                                       \n                                   \n                                </NavDropdown>\n                                )\n                            }\n                           \n                    </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n    </header>\n    )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types';\n\nexport default function Rating({value, text, color}) {\n    return (\n        <div className='rating'>\n            <span>\n                <i style ={{color}}\n                    className={\n                        value >= 1\n                            ? 'fas fa-star'\n                            : value >= 0.5\n                            ? 'fas fa-star-half-alt'\n                                : 'far fa-star'}\n                    ></i>\n            </span>\n            <span>\n                <i style={{ color }}\n                    className={\n                        value >= 2\n                            ? 'fas fa-star'\n                            : value >= 1.5\n                            ? 'fas fa-star-half-alt'\n                                : 'far fa-star'}\n                    ></i>\n            </span>\n            <span>\n                <i style={{ color }}\n                    className={\n                        value >= 3\n                            ? 'fas fa-star'\n                            : value >= 2.5\n                            ? 'fas fa-star-half-alt'\n                                : 'far fa-star'}\n                    ></i>\n            </span>\n            <span>\n                <i style={{ color }}\n                    className={\n                        value >= 4\n                            ? 'fas fa-star'\n                            : value >= 3.5\n                            ? 'fas fa-star-half-alt'\n                                : 'far fa-star'}\n                    ></i>\n            </span>\n            <span>\n                <i style={{ color }}\n                    className={\n                        value >= 5\n                            ? 'fas fa-star'\n                            : value >= 4.5\n                            ? 'fas fa-star-half-alt'\n                                : 'far fa-star'}\n                    ></i>\n            </span>\n        \n            <span>{text && text}</span>\n        </div>\n    )\n}\n\nRating.defaultProps = {\n    color:'#f8e825',\n}\n\nRating.propTypes = {\n    value: PropTypes.number.isRequired,\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired,\n\n}\n\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Card } from 'react-bootstrap'\nimport Rating from './Rating'\n\nexport default function Product({product}) {\n    return (\n        <div>\n            <Card className='my-3 p-3 rounded' >\n                <Link to={`/product/${product._id}`}>\n                    <Card.Img src={product.image} variant='top'/>\n                </Link>\n            </Card>\n\n            <Card.Body>\n                <Link to={`/product/${product._id}`}>\n                    <Card.Title as='div'>\n                        <strong>{product.name}</strong>\n                    </Card.Title>\n                </Link>\n\n                \n                <Card.Text as='div' >\n                    <div className='my-3'>\n                        {product.rating} from {product.numbReviews} reviews\n                    </div>\n                    \n                </Card.Text>\n\n                \n                <Card.Text as = 'div'>\n                    <Rating\n                        value={product.rating}\n                        text={`${product.numReviews}`}\n                        color=\"red\"\n                    />\n                </Card.Text>\n\n                <Card.Text as='h3'>${product.price}</Card.Text>\n\n            </Card.Body>\n            \n        </div>\n    )\n}\n\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'","import React from 'react'\nimport {Spinner} from 'react-bootstrap'\n\nexport default function Loader() {\n    return (\n        <div>\n            <Spinner\n                animation=\"border\"\n                role='status'\n                style={{\n                    width: '100px',\n                    height: '100px',\n                    margin: 'auto',\n                    display: 'block'\n                }}\n            \n            >\n                <span className ='sr-only'>Loading</span>\n\n            </Spinner>\n        </div>\n    )\n}\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nexport default function Message({variant, children}) {\n    return (\n            <Alert variant={variant}>\n                {children}\n            </Alert>\n\n    )\n}\n\nMessage.defaultProps = {\n    variant: 'info'\n}\n","import React, { useEffect} from 'react'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport {useDispatch, useSelector } from 'react-redux'\nimport { listProducts } from '../action/productAction'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\n\n\nexport default function HomeScreen() {\n    const dispatch = useDispatch()\n    const productList = useSelector(state => state.productList)\n    const { loading, error, products } =productList\n\n    useEffect(() => {\n        dispatch(listProducts())\n    }, [dispatch])\n    \n    return (\n\n        <div>\n        \n            <h1> Latest Products</h1>\n\n            {loading ? (\n               <Loader />\n            ) : error ? (\n                <Message variant='danger'>{error}</Message>\n             \n            ) : (\n                <Row>\n                    {products.map(product => (\n                        <Col key={product._id} sm={12} md={6} lg={4} xl={3} >\n                            <Product product={product} />\n                        </Col>\n                    ))}\n                </Row>\n            )}\n\n        </div>\n    )\n}\n","import axios from \"axios\";\nimport {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL\n} from \"../constants/productConstants\";\n\nexport const listProducts = () => async(dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n        const { data } = await axios.get('/api/products')\n        \n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n            dispatch({\n                type: PRODUCT_LIST_FAIL,\n                payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n                \n            })\n    }\n}\n\nexport const listProductDetails = (id) => async(dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n        const { data } = await axios.get(`/api/products/${id}`)\n        \n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n            dispatch({\n                type: PRODUCT_DETAILS_FAIL,\n                payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n                \n            })\n    }\n}","import React, { useEffect, useState} from 'react'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, Image, ListGroup, Card, Button, Form} from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {listProductDetails } from '../action/productAction'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\n\n\nexport default function ProductScreen({history, match }) {\n    const [qty, setQty] = useState(1)\n\n    const dispatch = useDispatch()\n    const productDetails = useSelector(state => state.productDetails)\n    const { loading, error, product } = productDetails\n    \n    useEffect(() => {\n        dispatch(listProductDetails(match.params.id))\n    }, [dispatch, match])\n\n    const addToCartHandler = () => {\n\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\n    }\n\n    return (\n        <div>\n            \n            <Link to=\"/\" className='btn btn-light my-3'>\n                        Go Back\n            </Link>\n\n            {\n                loading ? <Loader /> : error ? <Message variant='danger'> {error} </Message> :\n                (\n                <Row>\n                <Col md={6}>\n                    <Image src ={product.image} alt={product.name} fluid />\n                </Col>\n                \n                <Col md={3}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h3>{product.name}</h3>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <Rating\n                                value={product.rating}\n                                text={`${product.numReviews} reviews`}\n                                color=\"red\"\n                            />\n                        </ListGroup.Item>\n                        \n                        <ListGroup.Item>\n                            Price: ${product.price}\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            Description: ${product.description}\n                        </ListGroup.Item>\n\n\n                    </ListGroup>\n                </Col>\n\n                <Col md={3}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>\n                                        Price:\n                                    </Col>\n                                    <Col>\n                                        <strong> ${product.price}</strong>\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>\n                                        Status:\n                                    </Col>\n                                    <Col>\n                                    {product.countInStock>0 ?'In Stock': 'Out of Stock'}\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            {product.countInStock>0 && (\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col> Qty</Col>\n                                            <Col>\n                                                <Form.Control\n                                                    as='select'\n                                                    value={qty}\n                                                    onChange={(e) => setQty(e.target.value)}\n                                                >\n                                                {\n                                                        [...Array(product.countInStock).keys()].map((x) => (\n                                                            <option key={x + 1} value={x + 1}>\n                                                                {x + 1}\n                                                            </option>\n                                                        ))\n                                                }\n                                                </Form.Control>\n                                            \n                                            </Col>\n                                        </Row>\n                                        \n                                        </ListGroup.Item>\n                            )}\n                            \n                                        \n\n                            <ListGroup.Item>\n                                    <Button\n                                    onClick = {addToCartHandler}\n                                    className='btn-block'\n                                    type='button'\n                        \n                                    disabled={product.countInStock === 0}>\n                                    \n                                    Add to Cart\n                                </Button>\n                                \n                            </ListGroup.Item>\n\n                        </ListGroup>\n                    </Card>\n                </Col>\n                </Row>\n                )\n            }\n        </div>\n    )\n}\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'","import axios from \"axios\";\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM } from \"../constants/CartConstants\";\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n    const { data } = await axios.get(`/api/products/${id}`)\n    \n    dispatch({\n        type: CART_ADD_ITEM,\n        payload: {\n            product: data._id,\n            name: data.name,\n            image: data.image,\n            price: data.price,\n            countInStock: data.countInStock,\n            qty\n        }\n    })\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n    \n}\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n    dispatch({\n        type: CART_REMOVE_ITEM,\n        payload: id,\n    })\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}","import React from 'react'\nimport { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport { addToCart, removeFromCart } from '../action/CartActions'\n\n\n\n\nexport const CartScreen = ({ match, location, history }) => {\n    const productId = match.params.id;\n\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1;\n    const dispatch = useDispatch()\n\n   \n    \n    const cart = useSelector(state => state.cart)\n    const { cartItems } = cart;\n\n    useEffect(() => {\n        if (productId) {\n           dispatch(addToCart(productId, qty))\n       }\n    }, [dispatch, productId, qty])\n\n    const removeFromCartHandler = (id) => {\n        dispatch(removeFromCart(id))\n    }\n\n    const checkoutHandler = () => {\n        history.push('/login?redirect=shipping')\n        \n    }\n\n    return (\n        \n        <Row>\n        \n            <Col md = {8}>\n                <h1> Shopping Cart</h1>\n                {\n                    cartItems.length === 0 ? (\n                        <Message>\n                            Your cart is empty <Link to='/'> Go back</Link>\n                        </Message>\n                    ) : (\n                            <ListGroup variant='flush'>\n                                {cartItems.map(item => (\n                                    <ListGroup.Item key={item.product}>\n                                        <Row>\n                                            <Col md={2}>\n                                                <Image src={item.image} alt={item.name} fluid rounded />\n                                            </Col>\n\n                                            <Col md={3}>\n                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                            </Col>\n\n                                            <Col md={2}> ${item.price} </Col>\n                                            <Col md={2}>\n                                                <Form.Control\n                                                    as='select'\n                                                    value={item.qty}\n                                                    onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\n                                                >\n                                                {\n                                                        [...Array(item.countInStock).keys()].map((x) => (\n                                                            <option key={x + 1} value={x + 1}>\n                                                                {x + 1}\n                                                            </option>\n                                                        ))\n                                                }\n                                                </Form.Control>\n                                            </Col>\n\n                                            <Col md={2}>\n                                                <Button\n                                                    type='button'\n                                                    variant='light'\n                                                    onClick={() => removeFromCartHandler(item.product)}>\n                                                    \n                                                    <i className='fas fa-trash'></i>\n                                                    \n                                                </Button>\n                                            </Col>\n                                        </Row>\n                                    </ListGroup.Item>\n                                ))}\n                            </ListGroup>\n        \n                        )\n                }\n            </Col>\n\n            <Col md={4}>\n                <Card>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\n                                items</h2>\n                            \n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0)\n                                .toFixed(2)}\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <Button\n                                type='button'\n                                className='btn-block'\n                                disabled={cartItems.length === 0}\n                                onClick={checkoutHandler}\n                                >Checkout</Button>\n                                \n                        </ListGroup.Item>\n                    </ListGroup>\n                </Card>\n            </Col>\n                \n        </Row>\n        \n    )\n}\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nexport const FormContainer = ({children}) => {\n    return (\n        <Container>\n            <Row className='justify-content-md-center'>\n                <Col xs={12} md={6}>\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { login } from '../action/userActions'\nimport { FormContainer } from '../components/FormContainer'\n\n\nexport const LoginScreen = ({location, history}) => {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const redirect = location.search ? location.search.split('=')[1] : '/';\n\n    const dispatch = useDispatch()\n    const userLogin = useSelector(state => state.userLogin)\n    const {loading, error, userInfo} = userLogin\n\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(login(email, password))\n    }\n\n    return (\n        <FormContainer>\n            <h1>Sign In</h1>\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            \n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId ='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        type='email'\n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    \n                    </Form.Control>\n                </Form.Group>\n\n                 <Form.Group controlId ='Password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type='password'\n                        placeholder='Enter password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    \n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Sign In\n                </Button>\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    New Customer? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n                        Register\n                    </Link>\n                </Col>\n            </Row>\n        </FormContainer>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { register } from '../action/userActions'\nimport { FormContainer } from '../components/FormContainer'\n\n\nexport const RegisterScreen = ({location, history}) => {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [name, setName] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState(null)\n\n    const redirect = location.search ? location.search.split('=')[1] : '/';\n\n    const dispatch = useDispatch()\n    const userRegister = useSelector(state => state.userRegister)\n    const {loading, error, userInfo} = userRegister\n\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (password !== confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(register(name, email, password))\n        }\n    }\n\n    return (\n        <FormContainer>\n            <h1>Sign Up</h1>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            \n            <Form onSubmit={submitHandler}>\n\n                 <Form.Group controlId ='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        type='name'\n                        placeholder='Enter Name'\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    >\n                    \n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId ='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        type='email'\n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    \n                    </Form.Control>\n                </Form.Group>\n\n                 <Form.Group controlId ='Password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type='password'\n                        placeholder='Enter password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    \n                    </Form.Control>\n                </Form.Group>\n\n                 <Form.Group controlId ='confirmPassword'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        type='password'\n                        placeholder='Confirm password'\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    >\n                    \n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Register\n                </Button>\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    Have an account? <Link to={redirect ? `/login=${redirect}` : '/login'}>\n                        Register\n                    </Link>\n                </Col>\n            </Row>\n        </FormContainer>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getUserDetails } from '../action/userActions'\nimport { updateUserProfile } from '../action/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\n\n\nexport const ProfileScreen = ({location, history}) => {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [name, setName] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState(null)\n\n\n    const dispatch = useDispatch()\n    const userDetails = useSelector(state => state.userDetails)\n    const { loading, error, user } = userDetails\n    \n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n    useEffect(() => {\n\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n    \n            if (!user || !user.name || success) {\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\n                dispatch(getUserDetails('profile'))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [history, userInfo, dispatch, success])\n\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (password !== confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(updateUserProfile({\n                id: user._id, name, email, password,\n            }))\n        }\n    }\n\n    return (\n        <Row>\n            <Col md={3}>\n                <h2>User Profile</h2>\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {success && <Message variant='success'>Profile Updated</Message>}\n                {loading && <Loader />}\n            \n            <Form onSubmit={submitHandler}>\n\n                 <Form.Group controlId ='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        type='name'\n                        placeholder='Enter Name'\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    >\n                    \n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId ='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        type='email'\n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    \n                    </Form.Control>\n                </Form.Group>\n\n                 <Form.Group controlId ='Password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type='password'\n                        placeholder='Enter password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    \n                    </Form.Control>\n                </Form.Group>\n\n                 <Form.Group controlId ='confirmPassword'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        type='password'\n                        placeholder='Confirm password'\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    >\n                    \n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Update\n                </Button>\n            </Form>\n                \n            </Col>\n\n            <Col md={9}>\n                <h2>My Orders</h2>\n            </Col>\n        </Row>\n    )\n}\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button} from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { deleteUser, listUsers } from '../action/userActions'\n\n\nexport const UserListScreen = ({history}) => {\n\n    const dispatch = useDispatch()\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n\n    const userLogin = useSelector((state) => state.userLogin)\n    const { userInfo } = userLogin\n    \n    const userDelete = useSelector((state) => state.userDelete)\n    const { success: sucessDelete } = userDelete\n\n\n    useEffect(() => {\n        if(userInfo && userInfo.isAdmin)\n            dispatch(listUsers())\n        else {\n            history.push('/login')\n        }\n    }, [dispatch, userInfo, history, sucessDelete])\n\n    const deleteHandler = (id) => {\n        if (window.confirm('Are you sure')) {\n            dispatch(deleteUser(id))\n        }\n    }\n\n    return (\n        <div>\n            <h1>Users</h1>\n            {\n                loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th> ID</th>\n                                    <th> NAME</th>\n                                    <th> EMAIL</th>\n                                    <th> ADMIN</th>\n                        \n                                </tr>\n                            </thead>\n                            <tbody>\n                               \n                                {users.map((user) => (\n                                    <tr key={user._id}>\n                                        <td>{user._id}</td>\n                                        <td>{user.name}</td>\n                                        <td>{user.email}</td>\n                                        <td>\n                                            {user.isAdmin ?\n                                                (\n                                                    <i\n                                                        className='fas fa-check'\n                                                        style={{ color: 'green' }}>\n                                                    </i>\n                                                ) : (\n                                                    <i className='fas fa-times'\n                                                        style={{ color: 'red' }}>\n                                                        \n                                                    </i>\n                                                )}\n                                        </td>\n\n                                        <td>\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                                                <Button variant='light' className='btn-sm' >\n                                                    <i className='fas fa-edit'></i>\n                                                </Button>\n\n                                            </LinkContainer>\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n\n                        </Table>\n                    )\n            }\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { FormContainer } from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../action/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nexport const UserEditScreen = ({ match, history }) => {\n    const userId = match.params.id\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector((state) => state.userDetails)\n    const { loading, error, user } = userDetails\n\n    const userUpdate = useSelector((state) => state.userUpdate)\n    const {\n        loading: loadingUpdate,\n        error: errorUpdate,\n        success: successUpdate,\n    } = userUpdate\n\n    useEffect(() => {\n    if (successUpdate) {\n        dispatch({ type: USER_UPDATE_RESET })\n        history.push('/admin/userlist')\n    } else {\n        if (!user.name || user._id !== userId) {\n            dispatch(getUserDetails(userId))\n        } else {\n            setName(user.name)\n            setEmail(user.email)\n            setIsAdmin(user.isAdmin)\n        }\n    }\n    }, [dispatch, history, userId, user, successUpdate])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({ _id: userId, name, email, isAdmin }))\n    }\n\n    return (\n    <div>\n        <Link to='/admin/userlist' className='btn btn-light my-3'>\n            Go Back\n        </Link>\n        <FormContainer>\n            <h1>Edit User</h1>\n            {loadingUpdate && <Loader />}\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n            {loading ? (\n                <Loader />\n            ) : error ? (\n                <Message variant='danger'>{error}</Message>\n            ) : (\n                <Form onSubmit={submitHandler}>\n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                    type='name'\n                    placeholder='Enter name'\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                    type='email'\n                    placeholder='Enter email'\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='isadmin'>\n                    <Form.Check\n                    type='checkbox'\n                    label='Is Admin'\n                    checked={isAdmin}\n                    onChange={(e) => setIsAdmin(e.target.checked)}\n                    ></Form.Check>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Update\n                </Button>\n                </Form>\n            )}\n        </FormContainer>\n    </div>\n    )\n}\n","import React from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport { Container} from 'react-bootstrap' \nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport { CartScreen } from './screens/CartScreen';\nimport { LoginScreen } from './screens/LoginScreen';\nimport { RegisterScreen } from './screens/RegisterScreen';\nimport { ProfileScreen } from './screens/ProfileScreen';\nimport { UserListScreen } from './screens/UserListScreen';\nimport { UserEditScreen } from './screens/UserEditScreen';\n\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Header />\n        <main className= 'py-3'>\n          <Container>\n            <Route  path='/register/' component={RegisterScreen}/>\n            <Route  path='/profile' component={ProfileScreen}/>\n            <Route  path='/login/' component={LoginScreen}/>\n            <Route  path='/product/:id' component={ProductScreen}/>\n            <Route path='/cart/:id?' component={CartScreen} />\n            <Route path='/admin/userlist' component={UserListScreen} />\n            <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n            <Route exact path='/' component={HomeScreen}/>\n          </Container>\n        </main>\n        <Footer />\n      \n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {productListReducer } from './reducers/productsReducers'\nimport { productDetailsReducer } from \"./reducers/productsReducers\";\nimport { cartReducer } from \"./reducers/CartReducers\";\nimport {\n    userDetailsReducer,\n    userLoginReducer,\n    userRegisterReducer,\n    userListReducer,\n    userUpdateProfileReducer,\n    userDeleteReducer,\n    userUpdateReducer\n} from \"./reducers/userReducers\";\n\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    cart: cartReducer,\n\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailsReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    userList: userListReducer,\n    userDelete: userDeleteReducer,\n    userUpdate: userUpdateReducer\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(\n    localStorage.getItem('cartItems')) : [];\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(\nlocalStorage.getItem('userInfo')) : null;\n\nconst initialState = {\n    cart: { cartItems: cartItemsFromStorage },\n    userLogin: {userInfo: userInfoFromStorage}\n}\nconst middleware = [thunk]\n\nconst store = createStore(\n    reducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n)\n\n\nexport default store","import {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    \n} from \"../constants/productConstants\"\n\nexport const productListReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n        case PRODUCT_LIST_REQUEST:\n            return { loading: true , products: []}\n        case PRODUCT_LIST_SUCCESS:\n            return { loading: false, products: action.payload }\n        case PRODUCT_LIST_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n\n\nexport const productDetailsReducer = (state = { product: { reviews: []} }, action) => {\n    switch (action.type) {\n        case PRODUCT_DETAILS_REQUEST:\n            return { loading: true , ...state }\n        case PRODUCT_DETAILS_SUCCESS:\n            return { loading: false, product: action.payload }\n        case PRODUCT_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n\n\n\n","import {\n    CART_ADD_ITEM,\n    CART_REMOVE_ITEM\n} from \"../constants/CartConstants\";\n\nexport const cartReducer = (state = { cartItems: [] }, action) => {\n    switch (action.type) {\n        case CART_ADD_ITEM:\n            const item = action.payload\n            const existItem = state.cartItems.find(x => x.product === item.product)\n            if (existItem) {\n                return {\n                    ...state,\n                    cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n                }\n            } else {\n                \n                return {\n                    ...state,\n                    cartItems: [...state.cartItems, item]\n                }\n            }\n        case CART_REMOVE_ITEM:\n            return {\n                ...state,\n                cartItems: state.cartItems.filter(x=>x.product !== action.payload)\n            }\n        \n        default:\n            return state\n    }\n}","import {\n    USER_DELETE_FAIL,\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_REQUEST,\n    USER_LIST_RESET,\n    USER_LIST_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGOUT,\n    USER_REGISTER_FAIL,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_UPDATE_FAIL,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_RESET,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_RESET,\n    USER_UPDATE_SUCCESS\n} from \"../constants/userConstants\"\n\nexport const userLoginReducer = (state = { }, action) => {\n    switch (action.type) {\n        case USER_LOGIN_REQUEST:\n            return { loading: true }\n        case USER_LOGIN_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n        case USER_LOGIN_FAIL:\n            return { loading: false, error: action.payload }\n        case USER_LOGOUT:\n            return {}\n        default:\n            return state\n    }\n}\n\nexport const userRegisterReducer = (state = { }, action) => {\n    switch (action.type) {\n        case USER_REGISTER_REQUEST:\n            return { loading: true }\n        case USER_REGISTER_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n        case USER_REGISTER_FAIL:\n            return { loading: false, error: action.payload }\n    \n        default:\n            return state\n    }\n}\n\nexport const userDetailsReducer = (state = { user:{} }, action) => {\n    switch (action.type) {\n        case USER_DETAILS_REQUEST:\n            return { ...state, loading: true }\n        case USER_DETAILS_SUCCESS:\n            return { loading: false, user: action.payload }\n        case USER_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n    \n        default:\n            return state\n    }\n}\n\nexport const userUpdateProfileReducer = (state = { user:{} }, action) => {\n    switch (action.type) {\n        case USER_UPDATE_PROFILE_REQUEST:\n            return {loading: true }\n        case USER_UPDATE_PROFILE_SUCCESS:\n            return { loading: false, success: true, userInfo: action.payload }\n        case USER_UPDATE_PROFILE_FAIL:\n            return { loading: false, error: action.payload }\n        case USER_UPDATE_PROFILE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\nexport const userListReducer = (state = { users:[] }, action) => {\n    switch (action.type) {\n        case USER_LIST_REQUEST:\n            return {loading: true }\n        case USER_LIST_SUCCESS:\n            return { loading: false, users: action.payload }\n        case USER_LIST_FAIL:\n            return { loading: false, error: action.payload }\n        case USER_LIST_RESET:\n            return {users: []}\n    \n        default:\n            return state\n    }\n}\n\n\nexport const userDeleteReducer = (state = { }, action) => {\n    switch (action.type) {\n        case USER_DELETE_REQUEST:\n            return {loading: true }\n        case USER_DELETE_SUCCESS:\n            return { loading: false, success: true }\n        case USER_DELETE_FAIL:\n            return { loading: false, error: action.payload }\n       \n        default:\n            return state\n    }\n}\n\nexport const userUpdateReducer = (state = { user:{ } }, action) => {\n    switch (action.type) {\n        case USER_UPDATE_REQUEST:\n            return {loading: true }\n        case USER_UPDATE_SUCCESS:\n            return { loading: false, success: true }\n        case USER_UPDATE_FAIL:\n            return { loading: false, error: action.payload }\n        case USER_UPDATE_RESET:\n            return {\n                user: { }\n            }\n        default:\n            return state\n    }\n}\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux'\nimport store from './store'\n\n\nReactDOM.render(\n    <Provider store ={store}>\n        <App /> \n    </Provider>,\n    document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}